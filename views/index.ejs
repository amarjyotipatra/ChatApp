<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat App</title>
    <style>
        body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }
  
        #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
        #chat_box { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
        #chat_box:focus { outline: none; }
        #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }
  
        #messages { list-style-type: none; margin: 0; padding: 0; }
        #messages > li { padding: 0.5rem 1rem; }
        #messages > li:nth-child(odd) { background: #efefef; }
      </style>
</head>
<body>


    <h1> <%= groupname %> </h1>

    <!-- <input type="text" id="chat_box">
    <button id="send">Send</button> -->
    <ul id="messages">
         <% for (let i = 0; i < previousmsgs.length; i++) {%>
            <li> <%= previousmsgs[i].sender %> - <%= previousmsgs[i].content %> </li>
         <% } %>
    </ul>
    <form id="form" action="">
        <input id="chat_box" /><button id="send">Send</button>
      </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>

        var socket = io();
        let input = document.getElementById("chat_box");
        let msgList = document.getElementById("messages");
        let send = document.getElementById("send");

        // whenever we render the page we will join the room
        socket.emit('join_room', {
            roomid: '<%= roomid %>'
        });

        send.addEventListener("click", () => {
            let msg = input.value;
            socket.emit('new_msg', {
                message: msg,
                roomid: '<%= roomid %>',
                sender: '<%= user %>'
            });
            input.value = "";
        });

        socket.on('msg_rcvd', (data) => {
            let msg = document.createElement("li");
            msg.textContent = data.sender + ' - ' + data.message;
            msgList.appendChild(msg);
        });

    </script>
</body>
</html>